{"version":3,"file":"d0dcf9c1039535d44ee74defc829dfbf62dac3c5-8696e2a0d31385d33c89.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/camelcase/index.js","webpack://gatsby-starter-blog/../src/image-utils.ts","webpack://gatsby-starter-blog/../src/components/hooks.ts","webpack://gatsby-starter-blog/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-blog/../src/components/picture.tsx","webpack://gatsby-starter-blog/../src/components/placeholder.tsx","webpack://gatsby-starter-blog/../src/components/main-image.tsx","webpack://gatsby-starter-blog/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-blog/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-blog/../src/components/static-image.server.tsx","webpack://gatsby-starter-blog/../src/components/static-image.tsx","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","t","a","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","Object","hasOwnProperty","call","isVariantLabel","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxHeight","size","padding","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","valueTarget","noop","any","stepsOrder","schedule","cancel","cancelFrame","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","buffer","push","index","splice","delete","process","createRenderStep","processStep","stepId","processBatch","performance","now","createRenderBatcher","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","reject","time","newTime","newSpeed","pause","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","defaultValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion"],"sourceRoot":""}