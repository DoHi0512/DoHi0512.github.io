{"componentChunkName":"component---src-templates-post-template-tsx","path":"/프론트엔드에서 이미지 최적화를 해보자/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h1 id=\"이미지-최적화가-필요한-이유\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B5%9C%EC%A0%81%ED%99%94%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"이미지 최적화가 필요한 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이미지 최적화가 필요한 이유</h1>\n<p>웹페이지 로드 시간은 사용자가 페이지에서 이탈하지 않도록 하는 가장 큰 요소이다.\n웹페이지 로드 시간을 줄이기 위한 최적화 기법에는 여러 가지가 있는데 그중에서 가장 기본적인 이미지 최적화를 해 볼 것이다.</p>\n<h1 id=\"1-적절한-이미지-사이즈-사용하기\" style=\"position:relative;\"><a href=\"#1-%EC%A0%81%EC%A0%88%ED%95%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%82%AC%EC%9D%B4%EC%A6%88-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"1 적절한 이미지 사이즈 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 적절한 이미지 사이즈 사용하기</h1>\n<p>기본적으로 페이지에 표시되는 사이즈보다 더 큰 사이즈의 이미지를 사용하는것은 좋지 않다.\n이로 인한 바이트 낭비가 발생하고 이는 페이지 로드 시간에 영향을 끼치기 때문이다.</p>\n<p>그렇다면 어떻게 이미지 사이즈를 줄일 수 있을까?</p>\n<p>로컬에 저장된 이미지라면 다양한 이미지 압축 사이트를 이용해서 압축된 이미지를 저장할 수 있다.</p>\n<p><a href=\"https://www.resizepixel.com/ko/resize-image/\">사이트 1</a>\n<a href=\"https://www.iloveimg.com/ko/compress-image\">사이트 2</a></p>\n<p>이미지를 압축할 때에는 화면에 표시되는 크기의 2배정도로 하는것이 좋은데, 그 이유는 요즘 사용되는 디스플레이들은 같은 공간에 더 많은 픽셀을 그릴 수 있기 때문이다.</p>\n<p>이렇게 사이트를 통해 압축하는 것은 이미지가 로컬에 있으면 상관없지만, 이미지를 API에서 불러오는 경우에는 어떻게 해야 할까?</p>\n<p>바로 이미지 CDN을 사용하는 방법이 있다.</p>\n<blockquote>\n<p>CDN(Content Delivery Network) :\n물리적 한계를 극복하기 위해 사용자와 가까운 것에 콘텐츠 서버를 두는 기술</p>\n</blockquote>\n<p><img src=\"https://velog.velcdn.com/images/dohi/post/e146b22c-c4aa-4c51-a0c4-be62fe2190da/image.png\" alt=\"\"></p>\n<p>간단하게 설명하자면 오리지널 서버의 데이터를 다른 곳에 미리 복사해 두고, 사용자가 이미지를 다운로드 하려고 할 때 오리지널 서버가 아닌 가까운 서버에서 다운로드 하도록 하는 기술이다.</p>\n<p>또한 이미지 CDN은 이미지를 사용자에게 보내기 전에 특정한 형태로 가공하는 기능까지 있는데 이 기능을 이용해서 이미지를 최적화 할 수 있다.</p>\n<p>CDN 주소는 크롬 개발자 도구 -> 네트워크 탭에 들어가서 확인할 수 있는데, 이 주소를 이용해서 요청을 보낼 때 이미지 형태를 가공할 수 있다. (CDN마다 형식이 조금씩 다름)</p>\n<h1 id=\"2-차세대-이미지-포맷-사용하기\" style=\"position:relative;\"><a href=\"#2-%EC%B0%A8%EC%84%B8%EB%8C%80-%EC%9D%B4%EB%AF%B8%EC%A7%80-%ED%8F%AC%EB%A7%B7-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"2 차세대 이미지 포맷 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 차세대 이미지 포맷 사용하기</h1>\n<p>차세대 이미지 포맷인 <code class=\"language-text\">.webp</code> 를 사용해서도 이미지를 최적화 할 수 있다.</p>\n<blockquote>\n<p>webp :\n구글에서 만든 차세대 이미지 포맷, web을 위해서 만들어진 포맷이다.</p>\n</blockquote>\n<p>특징으로는 무손실 압축과 손실 압축을 둘다 지원하는데 두 방식에 따른 장단점이 존재한다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">무손실 압축</th>\n<th align=\"center\">손실 압축</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">장점</td>\n<td align=\"center\">품질이 저하되지 않음</td>\n<td align=\"center\">압축률이 높음</td>\n</tr>\n<tr>\n<td align=\"center\">단점</td>\n<td align=\"center\">압축률이 비교적 낮음</td>\n<td align=\"center\">품질 저하 발생</td>\n</tr>\n</tbody>\n</table>\n<p>이와 같이 <code class=\"language-text\">.webp</code> 를 사용하면 이미지 용량을 줄일 수 있다. 하지만 아직은 <code class=\"language-text\">webp</code> 를 지원하지 않는 브라우저도 있기 때문에 주의가 필요하다.</p>\n<h1 id=\"3-lazy-loading-사용하기\" style=\"position:relative;\"><a href=\"#3-lazy-loading-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"3 lazy loading 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Lazy Loading 사용하기</h1>\n<p><img src=\"https://velog.velcdn.com/images/dohi/post/6684447a-9b54-49a1-8eff-00468dc8d00a/image.png\" alt=\"\"></p>\n<p><code class=\"language-text\">Lazy Loading</code> 이란 스크롤해야만 보이는 이미지들(현재 화면에 보이지 않는 이미지)의 로딩을 나중에 하는 기술이다.</p>\n<p>주의해야 할 점은 첫 화면에 나타나는 이미지에 <code class=\"language-text\">Lazy Loading</code> 을 적용한다면 성능 저하가 발생할 수 있다.</p>\n<p>React에서는 <code class=\"language-text\">Image</code> 컴포넌트를 사용하면 기본적으로 <code class=\"language-text\">Lazy Loading</code> 이 적용되어 있다.</p>\n<h1 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마무리</h1>\n<p>이미지를 최적화하는 3가지 방법을 공부해 보았는데 이미지를 최적화 하는 방법은 이 외에도 정말 여러가지가 있다. 이 방법들을 공부하면서 아직 공부해야 할 것은 산더미만큼 남았다는것을 알았다...  더 열심히 공부해서 진짜 개발자가 될 수 있도록 노력해야겠다.</p>","frontmatter":{"title":"프론트엔드에서 이미지 최적화를 해보자","date":"2023.08.23","tags":["프론트엔드","최적화"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/5426d5bd14aa2fdabfcb856096c96dc7/ab163/optimize3.png","srcSet":"/static/5426d5bd14aa2fdabfcb856096c96dc7/813cd/optimize3.png 192w,\n/static/5426d5bd14aa2fdabfcb856096c96dc7/24c40/optimize3.png 384w,\n/static/5426d5bd14aa2fdabfcb856096c96dc7/ab163/optimize3.png 768w,\n/static/5426d5bd14aa2fdabfcb856096c96dc7/d302d/optimize3.png 1536w","sizes":"(min-width: 768px) 768px, 100vw"},"sources":[{"srcSet":"/static/5426d5bd14aa2fdabfcb856096c96dc7/23244/optimize3.webp 192w,\n/static/5426d5bd14aa2fdabfcb856096c96dc7/d4e33/optimize3.webp 384w,\n/static/5426d5bd14aa2fdabfcb856096c96dc7/88eeb/optimize3.webp 768w,\n/static/5426d5bd14aa2fdabfcb856096c96dc7/f80f8/optimize3.webp 1536w","type":"image/webp","sizes":"(min-width: 768px) 768px, 100vw"}]},"width":768,"height":400}}}}}}]}},"pageContext":{"slug":"/프론트엔드에서 이미지 최적화를 해보자/"}},"staticQueryHashes":["642825376"],"slicesMap":{}}